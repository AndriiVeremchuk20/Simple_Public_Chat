[{"/home/andrei/Code/Twitter_clon/client/src/index.tsx":"1","/home/andrei/Code/Twitter_clon/client/src/App.tsx":"2","/home/andrei/Code/Twitter_clon/client/src/pages/Login.tsx":"3","/home/andrei/Code/Twitter_clon/client/src/pages/Registration.tsx":"4","/home/andrei/Code/Twitter_clon/client/src/servises/auth.ts":"5","/home/andrei/Code/Twitter_clon/client/src/components/Spinner.tsx":"6","/home/andrei/Code/Twitter_clon/client/src/store/User.atom.ts":"7","/home/andrei/Code/Twitter_clon/client/src/store/keys.ts":"8"},{"size":510,"mtime":1673037388962,"results":"9","hashOfConfig":"10"},{"size":455,"mtime":1672607555310,"results":"11","hashOfConfig":"10"},{"size":2579,"mtime":1673038637637,"results":"12","hashOfConfig":"10"},{"size":4028,"mtime":1673013885766,"results":"13","hashOfConfig":"10"},{"size":693,"mtime":1673036531117,"results":"14","hashOfConfig":"10"},{"size":594,"mtime":1672609820958,"results":"15","hashOfConfig":"10"},{"size":198,"mtime":1673038619584,"results":"16","hashOfConfig":"10"},{"size":46,"mtime":1673037821811,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iyzvib",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/andrei/Code/Twitter_clon/client/src/index.tsx",[],[],"/home/andrei/Code/Twitter_clon/client/src/App.tsx",[],[],[],"/home/andrei/Code/Twitter_clon/client/src/pages/Login.tsx",["44","45","46","47","48"],[],"/home/andrei/Code/Twitter_clon/client/src/pages/Registration.tsx",["49","50","51","52","53","54","55","56","57"],[],"import { Button, Paper, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useCallback, useState } from \"react\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { authServises } from \"../servises/auth\";\nimport { User } from \"../types/User\";\n\ntype user = Omit<User, \"createdAt\">;\n\nexport const Registration = () => {\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const queryClient = useQueryClient();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n    formState: { errors },\n  } = useForm<user>({\n    mode: \"onChange\",\n  });\n\n  const { mutate, isLoading, isSuccess, isError, error } = useMutation(authServises.registerUser, {\n    onSuccess: (data) => {\n      console.log(data);\n      const message = \"success\";\n      alert(message);\n    },\n    onError: ()=>{\n      alert(\"there was an error\")\n    },\n    onSettled: ()=>{\n      queryClient.invalidateQueries('create');\n    }\n  });\n\n\n  const onSubmit: SubmitHandler<user> = useCallback((data) => {\n    const newUser = {\n      ...data\n    }\n    mutate(newUser);\n  }, []);\n\n  const onButtonClick = useCallback(() => {\n    setShowPassword((prev) => !prev);\n  }, []);\n\n\n  return (\n    <Paper style={styles.main}>\n      <Box\n        flexDirection={\"column\"}\n        display=\"flex\"\n        justifyContent={\"space-around\"}\n        height={\"40vh\"}\n      >\n        <Controller\n          name=\"username\"\n          control={control}\n          defaultValue=\"\"\n          rules={{ required: \"Username required\" }}\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              required\n              error={!!error}\n              type={\"text\"}\n              label=\"Username\"\n              onChange={onChange}\n              value={value}\n              variant=\"outlined\"\n              helperText={error ? error.message : null}\n            />\n          )}\n        />\n        <Controller\n          name=\"email\"\n          control={control}\n          defaultValue=\"\"\n          rules={{ required: \"Email required\" }}\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              required\n              error={!!error}\n              type={\"email\"}\n              label=\"Email\"\n              onChange={onChange}\n              value={value}\n              variant=\"outlined\"\n              helperText={error ? error.message : null}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"avatarUrl\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              type={\"text\"}\n              label=\"Avatal\"\n              onChange={onChange}\n              value={value}\n              variant=\"outlined\"\n              helperText={error ? error.message : null}\n            />\n          )}\n        />\n\n        <Box>\n          <Controller\n            name=\"password\"\n            control={control}\n            defaultValue=\"\"\n            rules={{ required: \"Password required\" }}\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\n              <TextField\n                required\n                error={!!error}\n                type={showPassword ? \"text\" : \"password\"}\n                label=\"Password\"\n                onChange={onChange}\n                value={value}\n                variant=\"outlined\"\n                helperText={error ? error.message : null}\n              />\n            )}\n          />\n          <Button onClick={onButtonClick}>{showPassword ? \"ü´£\" : \"üò∂‚Äçüå´Ô∏è\"}</Button>\n        </Box>\n        <Button onClick={handleSubmit(onSubmit)}>Regü§ùüèº</Button>\n      </Box>\n    </Paper>\n  );\n};\n\nconst styles = {\n  main: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n};\n","/home/andrei/Code/Twitter_clon/client/src/servises/auth.ts",[],[],"/home/andrei/Code/Twitter_clon/client/src/components/Spinner.tsx",[],[],"/home/andrei/Code/Twitter_clon/client/src/store/User.atom.ts",[],[],"/home/andrei/Code/Twitter_clon/client/src/store/keys.ts",[],[],{"ruleId":"58","severity":1,"message":"59","line":15,"column":5,"nodeType":"60","messageId":"61","endLine":15,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":18,"column":5,"nodeType":"60","messageId":"61","endLine":18,"endColumn":10},{"ruleId":"58","severity":1,"message":"63","line":19,"column":18,"nodeType":"60","messageId":"61","endLine":19,"endColumn":24},{"ruleId":"58","severity":1,"message":"64","line":24,"column":19,"nodeType":"60","messageId":"61","endLine":24,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":44,"column":6,"nodeType":"67","endLine":44,"endColumn":8,"suggestions":"68"},{"ruleId":"58","severity":1,"message":"69","line":5,"column":23,"nodeType":"60","messageId":"61","endLine":5,"endColumn":31},{"ruleId":"58","severity":1,"message":"59","line":16,"column":5,"nodeType":"60","messageId":"61","endLine":16,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":19,"column":5,"nodeType":"60","messageId":"61","endLine":19,"endColumn":10},{"ruleId":"58","severity":1,"message":"63","line":20,"column":18,"nodeType":"60","messageId":"61","endLine":20,"endColumn":24},{"ruleId":"58","severity":1,"message":"64","line":25,"column":19,"nodeType":"60","messageId":"61","endLine":25,"endColumn":28},{"ruleId":"58","severity":1,"message":"70","line":25,"column":30,"nodeType":"60","messageId":"61","endLine":25,"endColumn":39},{"ruleId":"58","severity":1,"message":"71","line":25,"column":41,"nodeType":"60","messageId":"61","endLine":25,"endColumn":48},{"ruleId":"58","severity":1,"message":"72","line":25,"column":50,"nodeType":"60","messageId":"61","endLine":25,"endColumn":55},{"ruleId":"65","severity":1,"message":"66","line":45,"column":6,"nodeType":"67","endLine":45,"endColumn":8,"suggestions":"73"},"@typescript-eslint/no-unused-vars","'register' is assigned a value but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'mutate'. Either include it or remove the dependency array.","ArrayExpression",["74"],"'useQuery' is defined but never used.","'isSuccess' is assigned a value but never used.","'isError' is assigned a value but never used.","'error' is assigned a value but never used.",["75"],{"desc":"76","fix":"77"},{"desc":"76","fix":"78"},"Update the dependencies array to be: [mutate]",{"range":"79","text":"80"},{"range":"81","text":"80"},[1080,1082],"[mutate]",[1189,1191]]