{"ast":null,"code":"import axios from \"axios\";\nconst PORT = 8080;\nconst BaseUrl = `http://127.0.0.1:${PORT}`;\nvar methods;\n(function (methods) {\n  methods[\"GET\"] = \"GET\";\n  methods[\"POST\"] = \"POST\";\n})(methods || (methods = {}));\nconst commonHeaders = {\n  \"Content-Type\": \"application/json\"\n};\n// const perfomRequest = async ({ path, method, body }: requestInterface) => {\n//   try {\n//     const bodyString = body ? JSON.stringify(body) : undefined;\n//     const req = await fetch([BaseUrl, path].join(\"/\"), {\n//       method,\n//       headers: commonHeaders,\n//       body: bodyString,\n//     });\n\n//     if (req.ok) {\n//       const dataJson = await req.json();\n//       console.log(dataJson);\n//       return { success: true, response: dataJson };\n//     }\n//     return { success: false, message: \"something went wrong\" };\n//   } catch (e) {\n//     console.log(`error ${e}`);\n//     return { success: false, message: \"something went wrong\" };\n//   }\n// };\n\nexport const authServises = {\n  registerUser: newUser => {\n    perfomRequest({\n      path: \"auth/registration\",\n      method: methods.POST,\n      body: newUser\n    });\n    axios.post();\n  },\n  getUsers: () => {\n    return perfomRequest({\n      path: \"auth/users\",\n      method: methods.GET\n    });\n  }\n};","map":{"version":3,"names":["axios","PORT","BaseUrl","methods","commonHeaders","authServises","registerUser","newUser","perfomRequest","path","method","POST","body","post","getUsers","GET"],"sources":["/home/andrei/Code/Twitter_clon/client/src/servises/auth.ts"],"sourcesContent":["import axios from \"axios\";\nimport { User } from \"../types/User\";\n\nconst PORT = 8080;\nconst BaseUrl = `http://127.0.0.1:${PORT}`;\n\nenum methods {\n  GET = \"GET\",\n  POST = \"POST\",\n}\n\nconst commonHeaders = {\n  \"Content-Type\": \"application/json\",\n};\n\ninterface requestInterface {\n  path: string;\n  method: methods;\n  body?: any;\n}\n\n// const perfomRequest = async ({ path, method, body }: requestInterface) => {\n//   try {\n//     const bodyString = body ? JSON.stringify(body) : undefined;\n//     const req = await fetch([BaseUrl, path].join(\"/\"), {\n//       method,\n//       headers: commonHeaders,\n//       body: bodyString,\n//     });\n\n//     if (req.ok) {\n//       const dataJson = await req.json();\n//       console.log(dataJson);\n//       return { success: true, response: dataJson };\n//     }\n//     return { success: false, message: \"something went wrong\" };\n//   } catch (e) {\n//     console.log(`error ${e}`);\n//     return { success: false, message: \"something went wrong\" };\n//   }\n// };\n\nexport const authServises = {\n  registerUser: (newUser: User) => {\n    perfomRequest({\n      path: \"auth/registration\",\n      method: methods.POST,\n      body: newUser,\n    });\n    axios.post();\n  },\n  getUsers: () => {\n    return perfomRequest({ path: \"auth/users\", method: methods.GET });\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,IAAI,GAAG,IAAI;AACjB,MAAMC,OAAO,GAAI,oBAAmBD,IAAK,EAAC;AAAC,IAEtCE,OAAO;AAAA,WAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;AAAA,GAAPA,OAAO,KAAPA,OAAO;AAKZ,MAAMC,aAAa,GAAG;EACpB,cAAc,EAAE;AAClB,CAAC;AAQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAGC,OAAa,IAAK;IAC/BC,aAAa,CAAC;MACZC,IAAI,EAAE,mBAAmB;MACzBC,MAAM,EAAEP,OAAO,CAACQ,IAAI;MACpBC,IAAI,EAAEL;IACR,CAAC,CAAC;IACFP,KAAK,CAACa,IAAI,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,MAAM;IACd,OAAON,aAAa,CAAC;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAEP,OAAO,CAACY;IAAI,CAAC,CAAC;EACnE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}