{"ast":null,"code":"import axios from \"axios\";\nconst PORT = 8080;\nconst API_URL = `http://127.0.0.1:${PORT}`;\naxios.defaults.baseURL = API_URL;\nconst config = {\n  'content-type': 'application/json'\n};\n\n// const perfomRequest = async ({ path, method, body }: requestInterface) => {\n//   try {\n//     const bodyString = body ? JSON.stringify(body) : undefined;\n//     const req = await fetch([BaseUrl, path].join(\"/\"), {\n//       method,\n//       headers: commonHeaders,\n//       body: bodyString,\n//     });\n\n//     if (req.ok) {\n//       const dataJson = await req.json();\n//       console.log(dataJson);\n//       return { success: true, response: dataJson };\n//     }\n//     return { success: false, message: \"something went wrong\" };\n//   } catch (e) {\n//     console.log(`error ${e}`);\n//     return { success: false, message: \"something went wrong\" };\n//   }\n// };\n\nexport const authServises = {\n  registerUser: newUser => {\n    axios.post(\"\", newUser).then(r => {\n      console.log(r.status);\n    }).catch(e => {\n      console.log(e);\n    });\n  },\n  getUsers: () => {}\n};","map":{"version":3,"names":["axios","PORT","API_URL","defaults","baseURL","config","authServises","registerUser","newUser","post","then","r","console","log","status","catch","e","getUsers"],"sources":["/home/andrei/Code/Twitter_clon/client/src/servises/auth.ts"],"sourcesContent":["import axios from \"axios\";\nimport { User } from \"../types/User\";\n\nconst PORT = 8080;\nconst API_URL = `http://127.0.0.1:${PORT}`;\n\naxios.defaults.baseURL = API_URL;\n\nconst config = { 'content-type': 'application/json' };\n\n// const perfomRequest = async ({ path, method, body }: requestInterface) => {\n//   try {\n//     const bodyString = body ? JSON.stringify(body) : undefined;\n//     const req = await fetch([BaseUrl, path].join(\"/\"), {\n//       method,\n//       headers: commonHeaders,\n//       body: bodyString,\n//     });\n\n//     if (req.ok) {\n//       const dataJson = await req.json();\n//       console.log(dataJson);\n//       return { success: true, response: dataJson };\n//     }\n//     return { success: false, message: \"something went wrong\" };\n//   } catch (e) {\n//     console.log(`error ${e}`);\n//     return { success: false, message: \"something went wrong\" };\n//   }\n// };\n\nexport const authServises = {\n  registerUser: (newUser: User) => {\n    axios.post(\"\", newUser)\n    .then((r)=>{\n      console.log(r.status)\n    }).catch((e)=>{\n      console.log(e)\n    })\n  },\n  getUsers: () => {\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,IAAI,GAAG,IAAI;AACjB,MAAMC,OAAO,GAAI,oBAAmBD,IAAK,EAAC;AAE1CD,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAGF,OAAO;AAEhC,MAAMG,MAAM,GAAG;EAAE,cAAc,EAAE;AAAmB,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAGC,OAAa,IAAK;IAC/BR,KAAK,CAACS,IAAI,CAAC,EAAE,EAAED,OAAO,CAAC,CACtBE,IAAI,CAAEC,CAAC,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAAC;IACvB,CAAC,CAAC,CAACC,KAAK,CAAEC,CAAC,IAAG;MACZJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EACDC,QAAQ,EAAE,MAAM,CAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}