{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Code/Twitter_clon/client/src/pages/Registration.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Paper, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useCallback, useState } from \"react\";\nimport { getUsers } from \"../servises/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registration = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const onButtonClick = useCallback(() => {\n    setShowPassword(prev => !prev);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"text\",\n      label: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"email\",\n      label: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"url\",\n      label: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: showPassword ? \"text\" : \"password\",\n        label: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onButtonClick,\n        children: showPassword ? \"ü´£\" : \"üò∂‚Äçüå´Ô∏è\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          console.log(getUsers());\n        },\n        children: \"Get users list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"oU2iR0Nn4U9M4EuAuA01ydZgBxg=\");\n_c = Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["Button","Paper","TextField","Box","React","useCallback","useState","getUsers","Registration","showPassword","setShowPassword","onButtonClick","prev","console","log"],"sources":["/home/andrei/Code/Twitter_clon/client/src/pages/Registration.tsx"],"sourcesContent":["import { Button, Paper, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useCallback, useState } from \"react\";\nimport { getUsers } from \"../servises/auth\";\nimport { User } from \"../types/User\";\n\nexport const Registration = () => {\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  const onButtonClick = useCallback(() => {\n    setShowPassword((prev) => !prev);\n  }, []);\n\n  return (\n    <Paper>\n      <TextField type={\"text\"} label=\"username\" />\n      <TextField type={\"email\"} label=\"email\" />\n      <TextField type={\"url\"} label=\"avatar\" />\n      <Box>\n        <TextField type={showPassword ? \"text\" : \"password\"} label=\"password\" />\n        <Button onClick={onButtonClick}>{showPassword ? \"ü´£\" : \"üò∂‚Äçüå´Ô∏è\"}</Button>\n      </Box>\n\n      <Box>\n        <Button\n          onClick={() => {\n            console.log(getUsers());\n          }}\n        >\n          Get users list\n        </Button>\n      </Box>\n      <div></div>\n    </Paper>\n  );\n};\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,SAAS,QAAQ,eAAe;AACxD,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAOC,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAG5C,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAU,KAAK,CAAC;EAEhE,MAAMK,aAAa,GAAGN,WAAW,CAAC,MAAM;IACtCK,eAAe,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,KAAK;IAAA,wBACJ,QAAC,SAAS;MAAC,IAAI,EAAE,MAAO;MAAC,KAAK,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5C,QAAC,SAAS;MAAC,IAAI,EAAE,OAAQ;MAAC,KAAK,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1C,QAAC,SAAS;MAAC,IAAI,EAAE,KAAM;MAAC,KAAK,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACzC,QAAC,GAAG;MAAA,wBACF,QAAC,SAAS;QAAC,IAAI,EAAEH,YAAY,GAAG,MAAM,GAAG,UAAW;QAAC,KAAK,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACxE,QAAC,MAAM;QAAC,OAAO,EAAEE,aAAc;QAAA,UAAEF,YAAY,GAAG,IAAI,GAAG;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QACrE,eAEN,QAAC,GAAG;MAAA,uBACF,QAAC,MAAM;QACL,OAAO,EAAE,MAAM;UACbI,OAAO,CAACC,GAAG,CAACP,QAAQ,EAAE,CAAC;QACzB,CAAE;QAAA,UACH;MAED;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEZ,CAAC;AAAC,GA7BWC,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}