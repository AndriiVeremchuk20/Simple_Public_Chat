{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Code/Twitter_clon/client/src/pages/Registration.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Paper, TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useState } from 'react';\nimport { getUsers } from '../servises/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registration = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"text\",\n      label: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"email\",\n      label: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"url\",\n      label: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      label: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          console.log(getUsers());\n        },\n        children: \"Get users list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["Button","Paper","TextField","Box","React","useState","getUsers","Registration","showPassword","setShowPassword","console","log"],"sources":["/home/andrei/Code/Twitter_clon/client/src/pages/Registration.tsx"],"sourcesContent":["import { Button, Paper, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useState } from 'react'\nimport { getUsers } from '../servises/auth'\nimport { User } from '../types/User'\n\nexport const Registration = () => {\n \n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n\n  return (\n    <Paper>\n        <TextField type={\"text\"} label=\"username\"/>\n        <TextField type={\"email\"} label=\"email\"/>\n        <TextField type={\"url\"} label=\"avatar\"/>\n        <TextField type={\"password\"} label=\"password\"/>\n        <Box>\n          <Button onClick={()=>{\n            console.log(getUsers())\n          }}>Get users list</Button>\n        </Box>\n        <div>\n          \n        </div>\n    </Paper>\n  )\n}\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,SAAS,QAAQ,eAAe;AACxD,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAAA;AAG3C,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;EAEhC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAU,KAAK,CAAC;EAGhE,oBACE,QAAC,KAAK;IAAA,wBACF,QAAC,SAAS;MAAC,IAAI,EAAE,MAAO;MAAC,KAAK,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3C,QAAC,SAAS;MAAC,IAAI,EAAE,OAAQ;MAAC,KAAK,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACzC,QAAC,SAAS;MAAC,IAAI,EAAE,KAAM;MAAC,KAAK,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eACxC,QAAC,SAAS;MAAC,IAAI,EAAE,UAAW;MAAC,KAAK,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/C,QAAC,GAAG;MAAA,uBACF,QAAC,MAAM;QAAC,OAAO,EAAE,MAAI;UACnBK,OAAO,CAACC,GAAG,CAACL,QAAQ,EAAE,CAAC;QACzB,CAAE;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACtB,eACN;MAAA;MAAA;MAAA;IAAA,QAEM;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ,CAAC;AAAA,GArBYC,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}