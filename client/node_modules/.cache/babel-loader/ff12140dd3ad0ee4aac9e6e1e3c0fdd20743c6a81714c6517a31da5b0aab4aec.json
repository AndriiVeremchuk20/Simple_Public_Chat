{"ast":null,"code":"const PORT = 8080;\nconst BaseUrl = `http://127.0.0.1:${PORT}`;\nvar methods;\n(function (methods) {\n  methods[\"GET\"] = \"GET\";\n  methods[\"POST\"] = \"POST\";\n})(methods || (methods = {}));\n;\nconst commonHeaders = {\n  \"Content-Type\": \"application/json\"\n};\nconst perfomRequest = async _ref => {\n  let {\n    path,\n    method,\n    body\n  } = _ref;\n  try {\n    const bodyString = body ? JSON.stringify(body) : undefined;\n    const req = await fetch([BaseUrl, path].join('/'), {\n      method,\n      headers: commonHeaders,\n      body: bodyString\n    });\n    if (req.ok) {\n      const dataJson = await req.json();\n      console.log(dataJson);\n      return {\n        success: true,\n        response: dataJson\n      };\n    }\n    return {\n      success: false,\n      message: \"something went wrong\"\n    };\n  } catch (e) {\n    console.log(`error ${e}`);\n    return {\n      success: false,\n      message: \"something went wrong\"\n    };\n  }\n};\nexport const registerUser = newUser => {\n  perfomRequest({\n    path: \"auth/registration\",\n    method: methods.POST,\n    body: user\n  });\n};\nexport const getUsers = () => {\n  return perfomRequest({\n    path: \"auth/users\",\n    method: methods.GET\n  });\n};\n\n/*\n\nexport const performRequest = async ({ path, method = 'GET', body }) => {\n  try {\n    const bodyString = body ? JSON.stringify(body) : undefined;\n    console.log('request method: ', method);\n    console.log('headers: ', commonHeaders);\n    console.log('body: ', body);\n    const response = await fetch([baseGoodsUrl, path].join('/'), { \n      method,\n      headers: commonHeaders,\n      body: bodyString,\n    });\n    if (response.ok) {\n      const responseJson = await response.json();\n      console.log('Response: ', responseJson);\n      return { success: true, response: responseJson };\n    } \n    return {success: false, error: 'Something Went Wrong'};  \n    \n  } catch(error) {\n    console.log('Something went wrong: ', error);\n    return {success: false, error: 'Something Went Wrong'};\n  }\n};\n\nexport const requestGoods = () => {\n  return performRequest({ path: 'goods', method: 'GET' });\n};\n\nexport const createItem = (item) => {\n  return performRequest({ path: 'goods', method: 'POST', body: item });\n};\n\nexport const deleteItem = (itemId) => {\n  return performRequest({ path: 'goods/' + itemId, method: 'DELETE'});\n};\n\nexport const editItem = (item) => {\n  return performRequest({ path: 'goods/' + item.id, method: 'PUT', body: item});\n};\n\n\n\n*/","map":{"version":3,"names":["PORT","BaseUrl","methods","commonHeaders","perfomRequest","path","method","body","bodyString","JSON","stringify","undefined","req","fetch","join","headers","ok","dataJson","json","console","log","success","response","message","e","registerUser","newUser","POST","user","getUsers","GET"],"sources":["/home/andrei/Code/Twitter_clon/client/src/servises/auth.ts"],"sourcesContent":["import { User } from \"../types/User\";\n\nconst PORT = 8080;\nconst BaseUrl = `http://127.0.0.1:${PORT}`;\n\nenum methods {\n    GET = \"GET\",\n    POST = \"POST\",\n};\n\nconst commonHeaders = { \n    \"Content-Type\": \"application/json\"\n};\n\ninterface requestInterface {\n    path:string;\n    method:methods; \n    body?:any;\n}\n\nconst perfomRequest = async ({path, method, body}: requestInterface) => {\n    try{\n        const bodyString = body ? JSON.stringify(body) : undefined;\n        const req = await fetch([BaseUrl, path].join('/'),{\n            method,\n            headers: commonHeaders,\n            body: bodyString,\n        });\n\n        if(req.ok){\n            const dataJson = await req.json();\n            console.log(dataJson);\n            return {success: true, response: dataJson}\n        }\n        return {success: false, message: \"something went wrong\"};\n\n    }catch(e){\n        console.log(`error ${e}`);\n        return {success: false, message: \"something went wrong\"};\n    }\n};\nexport const registerUser = (newUser: User) => {\n  perfomRequest({path: \"auth/registration\", method: methods.POST, body: user})\n}\n\nexport const getUsers = () =>{\n    return perfomRequest({path: \"auth/users\", method:methods.GET});\n};\n\n/*\n\nexport const performRequest = async ({ path, method = 'GET', body }) => {\n  try {\n    const bodyString = body ? JSON.stringify(body) : undefined;\n    console.log('request method: ', method);\n    console.log('headers: ', commonHeaders);\n    console.log('body: ', body);\n    const response = await fetch([baseGoodsUrl, path].join('/'), { \n      method,\n      headers: commonHeaders,\n      body: bodyString,\n    });\n    if (response.ok) {\n      const responseJson = await response.json();\n      console.log('Response: ', responseJson);\n      return { success: true, response: responseJson };\n    } \n    return {success: false, error: 'Something Went Wrong'};  \n    \n  } catch(error) {\n    console.log('Something went wrong: ', error);\n    return {success: false, error: 'Something Went Wrong'};\n  }\n};\n\nexport const requestGoods = () => {\n  return performRequest({ path: 'goods', method: 'GET' });\n};\n\nexport const createItem = (item) => {\n  return performRequest({ path: 'goods', method: 'POST', body: item });\n};\n\nexport const deleteItem = (itemId) => {\n  return performRequest({ path: 'goods/' + itemId, method: 'DELETE'});\n};\n\nexport const editItem = (item) => {\n  return performRequest({ path: 'goods/' + item.id, method: 'PUT', body: item});\n};\n\n\n\n*/"],"mappings":"AAEA,MAAMA,IAAI,GAAG,IAAI;AACjB,MAAMC,OAAO,GAAI,oBAAmBD,IAAK,EAAC;AAAC,IAEtCE,OAAO;AAAA,WAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;AAAA,GAAPA,OAAO,KAAPA,OAAO;AAGX;AAED,MAAMC,aAAa,GAAG;EAClB,cAAc,EAAE;AACpB,CAAC;AAQD,MAAMC,aAAa,GAAG,cAAkD;EAAA,IAA3C;IAACC,IAAI;IAAEC,MAAM;IAAEC;EAAsB,CAAC;EAC/D,IAAG;IACC,MAAMC,UAAU,GAAGD,IAAI,GAAGE,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,GAAGI,SAAS;IAC1D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,CAACZ,OAAO,EAAEI,IAAI,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC,EAAC;MAC9CR,MAAM;MACNS,OAAO,EAAEZ,aAAa;MACtBI,IAAI,EAAEC;IACV,CAAC,CAAC;IAEF,IAAGI,GAAG,CAACI,EAAE,EAAC;MACN,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;MACjCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,OAAO;QAACI,OAAO,EAAE,IAAI;QAAEC,QAAQ,EAAEL;MAAQ,CAAC;IAC9C;IACA,OAAO;MAACI,OAAO,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAsB,CAAC;EAE5D,CAAC,QAAMC,CAAC,EAAC;IACLL,OAAO,CAACC,GAAG,CAAE,SAAQI,CAAE,EAAC,CAAC;IACzB,OAAO;MAACH,OAAO,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAsB,CAAC;EAC5D;AACJ,CAAC;AACD,OAAO,MAAME,YAAY,GAAIC,OAAa,IAAK;EAC7CtB,aAAa,CAAC;IAACC,IAAI,EAAE,mBAAmB;IAAEC,MAAM,EAAEJ,OAAO,CAACyB,IAAI;IAAEpB,IAAI,EAAEqB;EAAI,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAK;EACzB,OAAOzB,aAAa,CAAC;IAACC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAACJ,OAAO,CAAC4B;EAAG,CAAC,CAAC;AAClE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}